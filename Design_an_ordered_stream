class OrderedStream:

    def __init__(self, n: int):
        self.stream = [""] * n  # Initialize the stream with empty strings
        self.ptr = 0  # Pointer to track the next element to output

    def insert(self, idKey: int, value: str) -> List[str]:
        # Adjust for 0-based indexing
        self.stream[idKey - 1] = value
        result = []

        # Output all contiguous, non-empty strings starting from ptr
        while self.ptr < len(self.stream) and self.stream[self.ptr]:
            result.append(self.stream[self.ptr])
            self.ptr += 1

        return result


# Your OrderedStream object will be instantiated and called as such:
# obj = OrderedStream(n)
# param_1 = obj.insert(idKey,value)
